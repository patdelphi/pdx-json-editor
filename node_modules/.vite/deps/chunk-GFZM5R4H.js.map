{
  "version": 3,
  "sources": ["../../preact/hooks/src/index.js"],
  "sourcesContent": ["import { options as _options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\n// Cast to use internal Options type\nconst options = /** @type {import('./internal').Options} */ (_options);\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\nlet oldRoot = options._root;\n\n// We take the minimum timeout for requestAnimationFrame to ensure that\n// the callback is invoked after the next frame. 35ms is based on a 30hz\n// refresh rate, which is the minimum rate for a smooth user experience.\nconst RAF_TIMEOUT = 35;\nlet prevRaf;\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._root = (vnode, parentDom) => {\n\tif (vnode && parentDom._children && parentDom._children._mask) {\n\t\tvnode._mask = parentDom._children._mask;\n\t}\n\n\tif (oldRoot) oldRoot(vnode, parentDom);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingArgs = hookItem._nextValue = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentIndex = 0;\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\n// TODO: Improve typing of commitQueue parameter\n/** @type {(vnode: import('./internal').VNode, commitQueue: any) => void} */\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\n\treturn hooks._list[index];\n}\n\n/**\n * @template {unknown} S\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} [initialState]\n * @returns {[S, (state: S) => void]}\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @template {unknown} S\n * @template {unknown} A\n * @param {import('./index').Reducer<S, A>} reducer\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ S, (state: S) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\t/** @type {(x: import('./internal').HookState) => x is import('./internal').ReducerHookState} */\n\t\t\t\tconst isStateHook = x => !!x._component;\n\t\t\t\tconst stateHooks =\n\t\t\t\t\thookState._component.__hooks._list.filter(isStateHook);\n\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = hookState._component.props !== p;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn prevScu\n\t\t\t\t\t? prevScu.call(this, p, s, c) || shouldUpdate\n\t\t\t\t\t: shouldUpdate;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\n/** @type {(initialValue: unknown) => unknown} */\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tconst result = ref(createHandle());\n\t\t\t\treturn () => {\n\t\t\t\t\tref(null);\n\t\t\t\t\tif (result && typeof result == 'function') result();\n\t\t\t\t};\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @template {unknown} T\n * @param {() => T} factory\n * @param {unknown[]} args\n * @returns {T}\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState<T>} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {unknown[]} args\n * @returns {() => void}\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(\n\t\t\tformatter ? formatter(value) : /** @type {any}*/ (value)\n\t\t);\n\t}\n}\n\n/**\n * @param {(error: unknown, errorInfo: import('preact').ErrorInfo) => void} cb\n * @returns {[unknown, () => void]}\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/** @type {() => string} */\nexport function useId() {\n\t/** @type {import('./internal').IdHookState} */\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n * @returns {void}\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').HookState} hook\n * @returns {void}\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n * @returns {void}\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {unknown[]} oldArgs\n * @param {unknown[]} newArgs\n * @returns {boolean}\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\n/**\n * @template Arg\n * @param {Arg} arg\n * @param {(arg: Arg) => any} f\n * @returns {any}\n */\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n"],
  "mappings": "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",
  "names": ["getHookState", "index", "type", "options", "__h", "currentComponent", "currentHook", "hooks", "__H", "__", "length", "push", "useState", "initialState", "useReducer", "invokeOrReturn", "reducer", "init", "hookState", "currentIndex", "_reducer", "__c", "action", "currentValue", "__N", "nextValue", "setState", "__f", "updateHookState", "p", "s", "c", "stateHooks", "filter", "x", "every", "prevScu", "call", "this", "shouldUpdate", "props", "forEach", "hookItem", "shouldComponentUpdate", "prevCWU", "componentWillUpdate", "__e", "tmp", "useEffect", "callback", "args", "state", "__s", "argsChanged", "_pendingArgs", "useLayoutEffect", "useRef", "initialValue", "useMemo", "current", "useImperativeHandle", "ref", "createHandle", "result", "concat", "factory", "useCallback", "useContext", "context", "provider", "sub", "value", "useDebugValue", "formatter", "useErrorBoundary", "cb", "errState", "componentDidCatch", "err", "errorInfo", "undefined", "useId", "root", "__v", "__m", "mask", "flushAfterPaintEffects", "component", "afterPaintEffects", "shift", "__P", "invokeCleanup", "invokeEffect", "e", "afterNextFrame", "raf", "done", "clearTimeout", "timeout", "HAS_RAF", "cancelAnimationFrame", "setTimeout", "requestAnimationFrame", "hook", "comp", "cleanup", "oldArgs", "newArgs", "some", "arg", "f", "previousComponent", "prevRaf", "oldBeforeDiff", "oldBeforeRender", "oldAfterDiff", "oldCommit", "oldBeforeUnmount", "oldRoot", "_options", "__b", "__r", "diffed", "unmount", "vnode", "parentDom", "__k", "commitQueue", "hasErrored"]
}
